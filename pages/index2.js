import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import Link from "next/link";
import { useRouter } from "next/router";

export default function Home() {
  const [tasks, setTasks] = useState([]);
  const router = useRouter();

  useEffect(() => {
    // redirect
    if(!localStorage.getItem('connectedUser') && !localStorage.getItem.token)
      router.push('/login');    
  }, [])
  

  useEffect(() => {
    const fetchTasks = async () => {
      let allTasks = await fetch(
        `${process.env.NEXT_PUBLIC_HOST}/api/Tasks/getAllTasks`,
        {
          method: "GET",
          headers: { "Content-Type": "application/json" },
        }
      );

      let response = await allTasks.json();
      console.log("The Response of FetchTasks: ", response.result);
      setTasks(response.result);
    };

    // Function call
    fetchTasks();
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Gestion de Suivi des Tâches</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <main className={styles.main}>
        <h2 className="">Gestion de Suivi des Tâches</h2>
        <div className="col-md-12">
          <table className="table table-dark">
            <thead>
              <tr>
                <th scope="col">#ID Tâche</th>
                <th scope="col">Tâche</th>
                <th scope="col">Durée</th>
                <th scope="col">Commmentaire Directeur</th>
                <th scope="col">Statut</th>
                <th scope="col">Commmentaire</th>
              </tr>
            </thead>
            <tbody>
              {tasks &&
                tasks.map((item, index) => {
                  return (
                    <tr key={index}>
                      <th scope="row">#000{item.task_id}</th>
                      <td>{item.task}</td>
                      <td>{item.duration}</td>
                      <td>{item.comment_director}</td>
                      <td>
                        {" "}
                        <span className="badge bg-success">
                          {" "}
                          {item.status && item.status == "Under Process"
                            ? "En cours de Traitement"
                            : "Terminé"}{" "}
                        </span>{" "}
                      </td>
                      <td>{item.comment}</td>
                    </tr>
                  );
                })}
            </tbody>
          </table>

          {/* Modal Part Start */}
          {/* <!-- Button trigger modal --> */}
          <Link href={'/addTask'}>
          <button
            type="button"
            className="btn btn-primary"
            data-toggle="modal"
            data-target="#exampleModalCenter"
          >
            Créer une nouvelle tâche
          </button>
          </Link>

          {/* Modal Part End */}
        </div>
      </main>
    </div>
  );
}
